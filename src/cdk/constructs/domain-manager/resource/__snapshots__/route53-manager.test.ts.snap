// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Route53Manager renders output correctly 1`] = `
Object {
  "Outputs": Object {
    "crossAccountDomainManagerRoleArn": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "CrossAccountDomainManagerRole39842D76",
          "Arn",
        ],
      },
    },
    "domainSubscriptionTopicArn": Object {
      "Value": Object {
        "Ref": "DomainSubscriptionTopic75D6B9C5",
      },
    },
  },
  "Parameters": Object {
    "referencetoJohnMyGreatAppRoute53ManagerAssetParameters67a2713d64d20eb121a60fd742aa52e95e70ba6b3e2ca98eae7a2b004382af9dS3Bucket32B2FC70Ref": Object {
      "Type": "String",
    },
    "referencetoJohnMyGreatAppRoute53ManagerAssetParameters67a2713d64d20eb121a60fd742aa52e95e70ba6b3e2ca98eae7a2b004382af9dS3VersionKeyED2D0E53Ref": Object {
      "Type": "String",
    },
  },
  "Resources": Object {
    "CrossAccountDomainManagerRole39842D76": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::account1:root",
                      ],
                    ],
                  },
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::domain:root",
                      ],
                    ],
                  },
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PermissionsBoundary": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":policy/John-MyGreatApp-account1-Route53ManagerPolicyBoundary",
            ],
          ],
        },
        "RoleName": "John-MyGreatApp-account1-CrossAccountDomainManagerRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "CrossAccountDomainManagerRoleDefaultPolicy60DA0FD5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "route53:ChangeResourceRecordSets",
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/Z123456789",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CrossAccountDomainManagerRoleDefaultPolicy60DA0FD5",
        "Roles": Array [
          Object {
            "Ref": "CrossAccountDomainManagerRole39842D76",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DomainSubscriptionTopic75D6B9C5": Object {
      "Properties": Object {
        "DisplayName": "Domain Subscription Topic",
        "TopicName": "John-MyGreatApp-DomainSubscriptionTopic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "DomainSubscriptionTopicPolicyADFDE884": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::account1:root",
                      ],
                    ],
                  },
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::domain:root",
                      ],
                    ],
                  },
                ],
              },
              "Resource": Object {
                "Ref": "DomainSubscriptionTopic75D6B9C5",
              },
              "Sid": "0",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "DomainSubscriptionTopic75D6B9C5",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "Route53ManagerLambdaDomainSubscriptionTopicB3DF4206": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdaec40983dc7fe40fda99d47e61eb307f86E8A690C",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": Object {
          "Ref": "DomainSubscriptionTopic75D6B9C5",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "Route53ManagerRole41BB9CC5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "PermissionsBoundary": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":policy/John-MyGreatApp-account1-Route53ManagerPolicyBoundary",
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "Route53ManagerRoleDefaultPolicy7A618D75": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "route53:ChangeResourceRecordSets",
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/Z123456789",
            },
            Object {
              "Action": Array [
                "route53:GetChange",
                "route53:ListResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "Route53ManagerRoleDefaultPolicy7A618D75",
        "Roles": Array [
          Object {
            "Ref": "Route53ManagerRole41BB9CC5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SingletonLambdaec40983dc7fe40fda99d47e61eb307f86E8A690C": Object {
      "DependsOn": Array [
        "Route53ManagerRoleDefaultPolicy7A618D75",
        "Route53ManagerRole41BB9CC5",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "referencetoJohnMyGreatAppRoute53ManagerAssetParameters67a2713d64d20eb121a60fd742aa52e95e70ba6b3e2ca98eae7a2b004382af9dS3Bucket32B2FC70Ref",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "referencetoJohnMyGreatAppRoute53ManagerAssetParameters67a2713d64d20eb121a60fd742aa52e95e70ba6b3e2ca98eae7a2b004382af9dS3VersionKeyED2D0E53Ref",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "referencetoJohnMyGreatAppRoute53ManagerAssetParameters67a2713d64d20eb121a60fd742aa52e95e70ba6b3e2ca98eae7a2b004382af9dS3VersionKeyED2D0E53Ref",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "HOSTED_ZONE": "Z123456789",
          },
        },
        "Handler": "route53-manager.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "Route53ManagerRole41BB9CC5",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaec40983dc7fe40fda99d47e61eb307f8AllowInvokeJohnMyGreatAppRoute53ManagerRoute53Manager1DomainSubscriptionTopic9C2685AE76ADEA39": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdaec40983dc7fe40fda99d47e61eb307f86E8A690C",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": Object {
          "Ref": "DomainSubscriptionTopic75D6B9C5",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
